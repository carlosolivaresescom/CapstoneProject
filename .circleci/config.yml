version: 2.1
orbs:
  slack: circleci/slack@4.5.3

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environments ${CIRCLE_WORKFLOW_ID:0:7}"
            aws cloudformation delete-stack --stack-name capstone-ecr-${CIRCLE_WORKFLOW_ID:0:7}
            aws cloudformation delete-stack --stack-name capstone-network-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  deploy-ecr-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy ecr
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/ecr.yml \
              --tags project=capstone \
              --stack-name "capstone-ecr-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --region=us-east-1

  upload-docker:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            yum -y update
            yum install -y ruby
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: Build docker
          command: |
            cd backend
            docker build -t capstoneproject .
            docker images
      - run:
          name: Run docker
          command: |
            cd backend
            docker run -i -p 80:80 capstoneproject
      - run:
          name: Tag docker image
          command: |
            cd backend
            export ECR-URI=$(aws cloudformation list-exports --query "Exports[?Name=='${CIRCLE_WORKFLOW_ID:0:7}-ECR-Uri'].Value" --no-paginate --output text)
            docker tag capstoneproject ${ECR-URI}/${CIRCLE_WORKFLOW_ID:0:7}-ecr-repository:latest
            docker push ${ECR-URI}/${CIRCLE_WORKFLOW_ID:0:7}-ecr-repository:latest
            exit 1

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: install tar and gzip
          command: |
            yum install -y tar gzip
      - run:
          name: Deploy network
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/network.yml \
              --tags project=capstone \
              --stack-name "capstone-network-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides EnvironmentName="${CIRCLE_WORKFLOW_ID:0:7}" \
              --region=us-east-1
            exit 1
      - destroy-environment

workflows:
  default:
    jobs:
      - deploy-ecr-infrastructure:
          filters:
            branches:
              only: main
      - upload-docker:
          filters:
            branches:
              only: main
          requires: [deploy-ecr-infrastructure]
